from scipy.spatial import distance
import tspinput
import sys
import time

def getNearestNeighbor(currPoint, tourDist):
    if len(points) == 1:
        return tourDist
    points.remove(currPoint)
    euc_dist = 1000
    nextPoint = currPoint 
    for p in points:
        a = (int(currPoint.x), int(currPoint.y))
        b = (int(p.x), int(p.y))
        if euc_dist > distance.euclidean(a, b):
            euc_dist = distance.euclidean(a,b)
            nextPoint = p 
    
    order.append(nextPoint)
    return getNearestNeighbor(nextPoint, tourDist + euc_dist)

start_time = time.time()

order = []
points = tspinput.getFile(sys.argv[1])

initialPoint = points[0] #p = p0
order.append(initialPoint)

tourDist = getNearestNeighbor(initialPoint, 0)
lastPoint = order[len(order) - 1]


a = (int(initialPoint.x), int(initialPoint.y))
b = (int(lastPoint.x), int(lastPoint.y))

tourDist += distance.euclidean(a,b)

#print order to travel in 
for temp in order:
    print(temp.x, temp.y)

print("Tour dist ", tourDist)

print("--- %s seconds ---" % (time.time() - start_time))
